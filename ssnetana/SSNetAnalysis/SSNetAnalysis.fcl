#include "messageservice.fcl"
#include "services_microboone.fcl"
#include "triggeralgo_service.fcl"
#include "services_microboone_simulation.fcl"
#include "services_microboone_basic.fcl"
#include "litedatamin_reco2d.fcl"

process_name: SSNetAnalysis

services:
{
 
  scheduler:               { defaultExceptions: false }    # Make all uncaught exceptions fatal.

  # Load the service that manages root files for histograms.
  TFileService:            { fileName: "SSNetAnalysis_ana.root" }
  TimeTracker:             {}     
  ExptGeoHelperInterface:         @local::microboone_geometry_helper
  Geometry:                       @local::microboone_geo
  DetectorProperties:             @local::microboone_detproperties
  LArProperties:                  @local::microboone_properties
  DetectorClocksService:          @local::microboone_detectorclocks
  #RawDrawingOptions:		  @local::microboone_rawdrawingopt
  MemoryTracker:           { ignoreTotal: 1 } # default is one
  RandomNumberGenerator:   {} #ART native random number generator
  message:                 @local::microboone_message_services_prod_debug
  FileCatalogMetadata:     @local::art_file_catalog_mc
  LArG4Parameters:        @local::microboone_largeantparameters
                         } #services

#Not sure what these are for
services.LLMetaMaker: {Enable: false}
services.LArCVMetaMaker: {Enable: false}  

# - Geant4 simulation parameters for liquid argon
#   Needed by SSNetAnalysis module; from larsim/Simulation/simulationservices_argoneut.fcl .
#  LArG4Parameters:        @local::argoneut_largeantparameters


# The 'source' section tells the script to expect an input file with art::Event records.
# The input file is assumed to have been created by a previous LArSoft job.

source:
{
  module_type: RootInput

  # Number of events to analyze; "-1" means all of the events in the input
  # file. You can override this value with the "-n" option on the command line. 
  maxEvents:  -1 

  # fileNames: ["myinput.root"]
}

# This is empty, because we're not writing any art::Events to an output file. 
outputs:{}

physics:
{
  # Define the variables we'll need to run for this analysis program.
  analyzers:
  {
    # This name defines a job step below
   # SSNetAnalysis: @local::SSNetAnalysis
    #llana     : @local::litedatamin_reco2d
   SSNetAnalysis:
   {
      module_type:     "SSNetAnalysis"
      SimulationLabel: "largeant"
      HitLabel:        "gaushit" 
      SSHitLabel: "ssnethitmaker:shrhit90"
	#PxThresholdLoe  : 0.5
      #PxThresholdHigh : 0.9
      PxType          : 0
      ClusterLabel:    "trajcluster" #fuzzycluster
      PDGcode:          2212 #proton
      BinSize:          0.3
      Vertex: 		"pandoraNu"
      PFP: 		"pandoraNu"
      TrackLabel:	"pandoraNu"
      ShowerLabel:      "pandoraNu"
      Planes: 3
      Radius: 100.0
     # WireToCMConstant:        0.3
      WireToCMConstant:		0.1857
      TimeToCMConstant:        0.0557	
      InputVertexFile: "/uboone/app/users/markrl/single_photon_fresh_13April/working_dir/hellstroms_hive/deltaRad/build/src_new/bnbcosmics_vertex_file"
      #InputVertexFile: "/uboone/app/users/markrl/single_photon_fresh_13April/working_dir/hellstroms_hive/deltaRad/build/src_new/ncdeltaradcosmics_vertex_file"
      Run:		5 
      Subrun:		1969
      Event:		98427
	 }
  }
#}

  # Schedule job step(s) for execution by defining the analysis module
  # for this job. 
  analysis: [ SSNetAnalysis ]
   #analysis: [llana]

  # "end_paths" is a keyword and contains the modules that do not modify the art::Event;
  # i.e., analyzers and output streams.

  end_paths: [ analysis ]
}

services.DetectorProperties.NumberTimeSamples:                             6400
services.DetectorProperties.ReadOutWindowSize:                             6400
services.DetectorClocksService.InheritClockConfig:                         false
services.DetectorClocksService.TriggerOffsetTPC:                          -0.400e3

### Here we try to suppress known and pointless messages
services.message.destinations :
{
 STDCOUT: 
 {
 type:      "cout"      #tells the message service to output this destination to cout
 threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level message
 append:     true       #says to append all messages to the output                      
 categories:
  {
	 ChannelFilter:
	 {
         limit: 0
	 reportEvery: 0
	}
         default:
         {
         limit: -1  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
         }
  }
}
 }
#physics.analyzers.llana.out_filename:  "larlite.root"

#physics.analyzers.llana.stream:      "llana"

#physics.analyzers.llana.DataLookUpMap: {
 # module_type:     "SSNetAnalysis"
 #     SimulationLabel: "largeant"
  #    HitLabel:        ["ssnethitmaker:shrhit90", "gaushit"]
     # PxThresholdLoe  : 0.5
     # PxThresholdHigh : 0.9
   #   PxType          : 0
    #  ClusterLabel:    "trajcluster" #fuzzycluster
     # PDGcode:          13
      #BinSize:          0.3
#}
#physics.analyzers.llana.AssociationLookUpMap: {
#cluster: ["proximity","pandoraCosmic"]
#}                                                                                                                 
